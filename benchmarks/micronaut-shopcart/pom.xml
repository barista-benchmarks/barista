<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="https://maven.apache.org/POM/4.0.0"
  xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>micronaut.benchmark.shopcart</groupId>
  <artifactId>shopcart</artifactId>
  <version>0.3.10</version>
  <packaging>${packaging}</packaging>

  <parent>
    <groupId>io.micronaut.platform</groupId>
    <artifactId>micronaut-parent</artifactId>
    <version>4.8.3</version>
  </parent>

  <properties>
    <packaging>jar</packaging>
    <jdk.version>11</jdk.version>
    <release.version>11</release.version>
    <micronaut.version>4.3.1</micronaut.version>
    <micronaut.runtime>netty</micronaut.runtime>
    <micronaut.aot.enabled>false</micronaut.aot.enabled>
    <micronaut.aot.packageName>micronaut.benchmark.aot.generated</micronaut.aot.packageName>
    <exec.mainClass>micronaut.benchmark.shopcart.Application</exec.mainClass>
    <!-- Extra config for each Native Image profile. By default it creates a bundle. -->
    <standalone.config>--bundle-create=${project.build.directory}/shopcart-${project.version}.nib,dry-run</standalone.config>
    <app.layer.config>--bundle-create=${project.build.directory}/layer1-shopcart-${project.version}.nib,dry-run</app.layer.config>
    <base.layer.config>--bundle-create=${project.build.directory}/layer0-shopcart-${project.version}.nib,dry-run</base.layer.config>
  </properties>

  <repositories>
    <repository>
      <id>sonatype-snapshots</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-inject</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.cache</groupId>
      <artifactId>micronaut-cache-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micronaut.serde</groupId>
      <artifactId>micronaut-serde-jackson</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.test</groupId>
      <artifactId>micronaut-test-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut.cache</groupId>
      <artifactId>micronaut-cache-caffeine</artifactId>
      <version>4.2.2</version>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-http-client</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-http-server-netty</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>io.micronaut</groupId>
      <artifactId>micronaut-runtime</artifactId>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>io.micronaut</groupId>
          <artifactId>micronaut-jackson-databind</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>io.micronaut.maven</groupId>
        <artifactId>micronaut-maven-plugin</artifactId>
        <configuration>
          <configFile>aot-${packaging}.properties</configFile>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <!-- Uncomment to enable incremental compilation -->
          <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->

          <annotationProcessorPaths combine.children="append">
            <path>
              <groupId>io.micronaut.serde</groupId>
              <artifactId>micronaut-serde-processor</artifactId>
              <version>${micronaut.serialization.version}</version>
              <exclusions>
                <exclusion>
                  <groupId>io.micronaut</groupId>
                  <artifactId>micronaut-inject</artifactId>
                </exclusion>
              </exclusions>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Amicronaut.processing.group=micronaut.benchmark.shopcart</arg>
            <arg>-Amicronaut.processing.module=shopcart</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.graalvm.buildtools</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>0.10.0</version>
        <configuration>
          <metadataRepository>
            <enabled>true</enabled>
            <version>0.3.6</version>
          </metadataRepository>
          <buildArgs combine.children="append">
            <buildArg>--initialize-at-build-time=io.micronaut.security.authentication.AuthenticationMode</buildArg>
            <buildArg>--initialize-at-build-time=io.micronaut.configuration.metrics.binder.web.WebMetricsClientCondition</buildArg>
            <buildArg>--initialize-at-build-time=io.micronaut.configuration.metrics.binder.web.WebMetricsServerCondition</buildArg>
            <buildArg>--initialize-at-build-time=io.micronaut.serde.config.annotation.SerdeConfig$SerSubtyped$DiscriminatorValueKind</buildArg>
            <!-- Micronaut class initialization deadlock bug -->
            <buildArg>--initialize-at-build-time=io.micronaut.core.convert.ConversionContext,io.micronaut.core.convert.ImmutableArgumentConversionContext</buildArg>
            <!--Missing build time initialization-->
            <buildArg>--initialize-at-build-time=io.micronaut.context.ApplicationContextConfigurer$1</buildArg>
            <!--Class initialization fails due to UnsatisfiedLinkError from JNI calls-->
            <buildArg>--initialize-at-run-time=io.netty.channel.unix.Errors</buildArg>
            <buildArg>--initialize-at-run-time=io.netty.channel.unix.IovArray</buildArg>
            <buildArg>--initialize-at-run-time=io.netty.channel.unix.Limits</buildArg>
            <!--Cause a SimpleLogger, which is initialized at run time, to be in the image heap-->
            <buildArg>--initialize-at-run-time=io.netty.buffer</buildArg>
            <buildArg>--initialize-at-run-time=io.netty.channel</buildArg>
            <buildArg>--initialize-at-run-time=io.netty.handler</buildArg>
            <buildArg>--initialize-at-run-time=io.netty.resolver</buildArg>
            <buildArg>--initialize-at-run-time=io.netty.util</buildArg>
            <buildArg>--initialize-at-run-time=io.netty.bootstrap</buildArg>
            <!-- Show exception stack traces for exceptions during image building -->
            <buildArg>-H:+ReportExceptionStackTraces</buildArg>
          </buildArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
      <properties>
        <!-- Disable bundle creation in dev environment. -->
        <!-- Since buildArg doesn't accept empty values add a harmless but useful flag. -->
        <standalone.config>-H:+ReportExceptionStackTraces</standalone.config>
        <app.layer.config>-H:+ReportExceptionStackTraces</app.layer.config>
        <base.layer.config>-H:+ReportExceptionStackTraces</base.layer.config>
      </properties>
    </profile>
    <profile>
      <id>standalone</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>0.10.0</version>
            <configuration>
              <metadataRepository>
                <enabled>true</enabled>
                <version>0.3.6</version>
              </metadataRepository>
              <buildArgs combine.children="append">
                <buildArg>${standalone.config}</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>app-layer</id>
      <dependencies>
        <!-- Requested by the base layer config -->
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>micronaut-shopcart-base-layer</artifactId>
          <version>${project.version}</version>
        </dependency>
      </dependencies>
      <build>
        <directory>${project.basedir}/app-layer-target</directory>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>0.10.0</version>
            <configuration>
              <imageName>shopcart-layered</imageName>
              <metadataRepository>
                <enabled>true</enabled>
                <version>0.3.6</version>
              </metadataRepository>
              <buildArgs combine.children="append">
                <buildArg>-J-Xmx18g</buildArg>
                <buildArg>-H:LinkerRPath=$ORIGIN</buildArg>
                <buildArg>-H:+UnlockExperimentalVMOptions</buildArg>
                <buildArg>-H:LayerUse=base-layer-target/shopcart-base-layer.nil</buildArg>
                <buildArg>-H:-UnlockExperimentalVMOptions</buildArg>
                <buildArg>-H:NativeLinkerOption=-pie</buildArg>
                <buildArg>${app.layer.config}</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>base-layer</id>
      <build>
        <directory>${project.basedir}/base-layer-target</directory>
        <plugins>
          <plugin>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>native-maven-plugin</artifactId>
            <version>0.10.0</version>
            <configuration>
              <metadataRepository>
                <enabled>true</enabled>
                <version>0.3.6</version>
              </metadataRepository>
              <imageName>libshopcartbaselayer</imageName>
              <mainClass>.</mainClass>
              <buildArgs combine.children="append">
                <buildArg>-H:ApplicationLayerOnlySingletons=io.micronaut.core.io.service.ServiceScanner$StaticServiceDefinitions</buildArg>
                <buildArg>-H:ApplicationLayerInitializedClasses=io.micronaut.inject.annotation.AnnotationMetadataSupport</buildArg>
                <buildArg>-H:ApplicationLayerInitializedClasses=io.micronaut.core.io.service.MicronautMetaServiceLoaderUtils</buildArg>
                <buildArg>-J-Xmx18g</buildArg>
                <buildArg>-cp ${project.basedir}/base_layer_config</buildArg>
                <buildArg>${base.layer.config}</buildArg>
              </buildArgs>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration combine.self="append">
              <testExcludes>
                <exclude>**/benchmark/**</exclude>
              </testExcludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/resources/*.properties</exclude>
                <exclude>logback.xml</exclude>
              </excludes>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-install-plugin</artifactId>
            <executions>
              <execution>
                <phase>install</phase>
                <goals>
                  <goal>install-file</goal>
                </goals>
                <configuration>
                  <groupId>${project.groupId}</groupId>
                  <file>${project.build.directory}/${project.artifactId}-${project.version}.jar</file>
                  <artifactId>micronaut-shopcart-base-layer</artifactId>
                  <packaging>jar</packaging>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
